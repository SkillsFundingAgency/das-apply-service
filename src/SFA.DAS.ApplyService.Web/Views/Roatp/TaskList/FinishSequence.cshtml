@using SFA.DAS.ApplyService.Application.Apply.Roatp
@using SFA.DAS.ApplyService.Web.ViewModels.Roatp
@model TaskListViewModel

@{
    var applicationSequence = Model.ApplicationSequences
        .Single(seq => (int)seq.SequenceId == RoatpWorkflowSequenceIds.Finish);

    <li>
        <h2 class="app-task-list__section">
            @Html.Raw(Convert.ToInt32(applicationSequence.SequenceId)). @Html.Raw(applicationSequence.Description)
        </h2>
        <ul class="app-task-list__items">
            @foreach (var section in applicationSequence.Sections.OrderBy(sec => sec.SectionId))
            {
                var sequenceSection = "finish_" + section.SectionId;

                @if (Model.FinishSectionStatus(section.SectionId) == TaskListSectionStatus.NotRequired)
                {
                    <li class="app-task-list__item">
                        @Html.Raw(section.Title)
                        <strong class="govuk-tag app-task-list__task-@Model.FinishCss(section.SectionId)" id="status_@sequenceSection"> @Model.FinishSectionStatus(section.SectionId)</strong>
                    </li>
                }
                else
                {
                    @if (Model.ApplicationSequencesCompleted && Model.PreviousSectionCompleted(applicationSequence.SequenceId, section.SectionId))
                    {
                        <li class="app-task-list__item">
                            <a class="app-task-list__task_name" href="@Url.Action("Section", "RoatpApplication", new { section.ApplicationId, section.SequenceId, section.SectionId })">
                                @Html.Raw(section.Title)
                            </a>
                            <strong class="govuk-tag app-task-list__task-@Model.FinishCss(section.SectionId)" id="completed"> @Model.FinishSectionStatus(section.SectionId)</strong>
                        </li>
                    }
                    else
                    {
                        <li class="app-task-list__item">
                            @Html.Raw(section.Title)
                        </li>
                    }
                }
            }

            @if (Model.ApplicationSequencesCompleted && Model.PreviousSectionCompleted(RoatpWorkflowSequenceIds.Finish, RoatpWorkflowSectionIds.Finish.SubmitApplication)) 
            {
                <li class="app-task-list__item">
                    <a class="app-task-list__task_name" href="@Url.Action("SubmitApplication", "RoatpApplication", new { Model.ApplicationId })">
                        Submit application
                    </a>
                    @{
                        var finishSectionCss = "";
                        if (Model.FinishSectionStatus(RoatpWorkflowSectionIds.Finish.TermsAndConditions) == TaskListSectionStatus.Completed)
                        {
                            finishSectionCss = "govuk-tag app-task-list__task-next";
                        }
                    }
                    <strong class="@finishSectionCss" id="completed">

                        @if (Model.FinishSectionStatus(RoatpWorkflowSectionIds.Finish.TermsAndConditions) == TaskListSectionStatus.Completed)
                        {
                            @Html.Raw("Next");
                        }

                    </strong>
                </li>
            }
            else
            {
                <li class="app-task-list__item">
                    Submit application
                </li>
            }
        </ul>

    </li>
}
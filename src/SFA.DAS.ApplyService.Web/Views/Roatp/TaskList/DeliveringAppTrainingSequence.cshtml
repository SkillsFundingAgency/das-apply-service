@using SFA.DAS.ApplyService.Application.Apply.Roatp
@model SFA.DAS.ApplyService.Web.ViewModels.Roatp.TaskListViewModel

@{
    var applicationSequence = Model.ApplicationSequences
        .Single(seq => (int)seq.SequenceId == RoatpWorkflowSequenceIds.DeliveringApprenticeshipTraining);

    <li>
        <h2 class="app-task-list__section">
            <span class="app-task-list__section-number">@Html.Raw(applicationSequence.SequenceId). </span>
            @Html.Raw(applicationSequence.Description)
        </h2>
        <ul class="app-task-list__items">
            @foreach (var section in applicationSequence.Sections.OrderBy(sec => sec.SectionId))
            {
                var sequenceSection = section.SequenceId + "_" + section.SectionId;

                @if (!Model.IntroductionPageNextSectionUnavailable(section.SequenceId, section.SectionId) && Model.SectionStatus(section.SequenceId, section.SectionId).ToLower() != "not required")
                {
                    if (section.SectionId == RoatpWorkflowSectionIds.DeliveringApprenticeshipTraining.ManagementHierarchy)
                    {
                        <li class="app-task-list__item">
                            <span class="app-task-list__task-name">
                                <a class="govuk-link" asp-action="StartPage" asp-controller="RoatpManagementHierarchy" asp-route-applicationId="@Model.ApplicationId">
                                    @Html.Raw(section.Title)
                                </a>
                            </span>
                            <strong class="govuk-tag app-task-list__task-@Model.CssClass(section.SequenceId, section.SectionId)" id="status_@sequenceSection"> @Model.SectionStatus(section.SequenceId, section.SectionId)</strong>
                        </li>
                    }
                    else
                    {
                        <li class="app-task-list__item">
                            <span class="app-task-list__task-name">
                                <a class="govuk-link" asp-action="Section" asp-controller="RoatpApplication" asp-route-applicationId="@(section.ApplicationId)" asp-route-sequenceId="@(section.SequenceId)" asp-route-sectionId="@(section.SectionId)">
                                    @Html.Raw(section.Title)
                                </a>
                            </span>
                            <strong class="govuk-tag app-task-list__task-@Model.CssClass(section.SequenceId, section.SectionId)" id="status_@sequenceSection"> @Model.SectionStatus(section.SequenceId, section.SectionId)</strong>
                        </li>
                    }
                }
                else
                {
                    <li class="app-task-list__item">
                        <span class="app-task-list__task-name">
                            @Html.Raw(section.Title)
                        </span>
                        @if (Model.SectionStatus(section.SequenceId, section.SectionId).ToLower() == "not required")
                        {
                            <strong class="govuk-tag app-task-list__task-@Model.CssClass(section.SequenceId, section.SectionId)" id="status_@sequenceSection"> @Model.SectionStatus(section.SequenceId, section.SectionId)</strong>

                        }
                    </li>
                }
            }
        </ul>
    </li>
}
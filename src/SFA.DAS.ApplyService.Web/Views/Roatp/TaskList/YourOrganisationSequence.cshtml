@using SFA.DAS.ApplyService.Application.Apply.Roatp
@model SFA.DAS.ApplyService.Web.ViewModels.Roatp.TaskListViewModel

@{
    var yourOrganisationSequence = Model.ApplicationSequences
        .Single(seq => (int)seq.SequenceId == RoatpWorkflowSequenceIds.YourOrganisation);

    <li>
        <h2 class="app-task-list__section">
            @Html.Raw(Convert.ToInt32(yourOrganisationSequence.SequenceId)). @Html.Raw(yourOrganisationSequence.Description)
        </h2>

        <ul class="app-task-list__items">
            <li class="app-task-list__item">
                <a class="app-task-list__task_name" href="@Url.Action("ProviderRoute", "RoatpYourOrganisationApplication", new { applicationId = Model.ApplicationId })">Provider route</a>
                <strong class="govuk-tag app-task-list__task-@Model.CssClass(RoatpWorkflowSequenceIds.YourOrganisation, RoatpWorkflowSectionIds.YourOrganisation.ProviderRoute)">@Model.SectionStatus(RoatpWorkflowSequenceIds.YourOrganisation, RoatpWorkflowSectionIds.YourOrganisation.ProviderRoute)</strong>
            </li>
            <li class="app-task-list__item">
                <a class="app-task-list__task_name" href="@Url.Action("WhatYouWillNeed", "RoatpYourOrganisationApplication", new { applicationId = Model.ApplicationId })">Introduction and what you'll need</a>
                <strong class="govuk-tag app-task-list__task-@Model.CssClass(RoatpWorkflowSequenceIds.YourOrganisation, RoatpWorkflowSectionIds.YourOrganisation.WhatYouWillNeed)">@Model.SectionStatus(RoatpWorkflowSequenceIds.YourOrganisation, RoatpWorkflowSectionIds.YourOrganisation.WhatYouWillNeed)</strong>
            </li>
            <li class="app-task-list__item">
                @if (Model.PreviousSectionCompleted(RoatpWorkflowSequenceIds.YourOrganisation, RoatpWorkflowSectionIds.YourOrganisation.OrganisationDetails))
                {
                    <a class="app-task-list__task_name" href="@Url.Action("Section", "RoatpApplication", new { Model.ApplicationId, sequenceId = RoatpWorkflowSequenceIds.YourOrganisation, sectionId = RoatpWorkflowSectionIds.YourOrganisation.OrganisationDetails })">
                        Organisation information
                        <strong class="govuk-tag app-task-list__task-@Model.CssClass(RoatpWorkflowSequenceIds.YourOrganisation, RoatpWorkflowSectionIds.YourOrganisation.OrganisationDetails)">@Model.SectionStatus(RoatpWorkflowSequenceIds.YourOrganisation, RoatpWorkflowSectionIds.YourOrganisation.OrganisationDetails)</strong>
                    </a>
                }
                else
                {
                    @Html.Raw("Organisation information")
                }
            </li>
            <li class="app-task-list__item">
                @if (Model.PreviousSectionCompleted(RoatpWorkflowSequenceIds.YourOrganisation, RoatpWorkflowSectionIds.YourOrganisation.WhosInControl))
                {
                    <a class="app-task-list__task_name" href="@Url.Action("StartPage", "RoatpWhosInControlApplication", new { Model.ApplicationId })">
                        Tell us who's in control
                        <strong class="govuk-tag app-task-list__task-@Model.WhosInControlCss">@Model.WhosInControlSectionStatus</strong>
                    </a>
                }
                else
                {
                    @Html.Raw("Tell us who's in control")
                }
            </li>
            <li class="app-task-list__item">
                @if (Model.PreviousSectionCompleted(RoatpWorkflowSequenceIds.YourOrganisation, RoatpWorkflowSectionIds.YourOrganisation.DescribeYourOrganisation))
                {
                    <a class="app-task-list__task_name" href="@Url.Action("Page", "RoatpApplication", new { Model.ApplicationId, sequenceId = RoatpWorkflowSequenceIds.YourOrganisation, sectionId = RoatpWorkflowSectionIds.YourOrganisation.DescribeYourOrganisation, pageId = Model.DescribeOrganisationStartPageId, redirectAction = "TaskList" })">
                        Describe your organisation
                        <strong class="govuk-tag app-task-list__task-@Model.CssClass(RoatpWorkflowSequenceIds.YourOrganisation, RoatpWorkflowSectionIds.YourOrganisation.DescribeYourOrganisation)">@Model.SectionStatus(RoatpWorkflowSequenceIds.YourOrganisation, RoatpWorkflowSectionIds.YourOrganisation.DescribeYourOrganisation)</strong>
                    </a>
                }
                else
                {
                    @Html.Raw("Describe your organisation")
                }
            </li>
            <li class="app-task-list__item">
                @if (Model.PreviousSectionCompleted(RoatpWorkflowSequenceIds.YourOrganisation, RoatpWorkflowSectionIds.YourOrganisation.ExperienceAndAccreditations))
                {
                    <a class="app-task-list__task_name" href="@Url.Action("ExperienceAccreditation", "RoatpYourOrganisationApplication", new { applicationId = Model.ApplicationId })">
                        Experience and accreditation
                        <strong class="govuk-tag app-task-list__task-@Model.CssClass(RoatpWorkflowSequenceIds.YourOrganisation, RoatpWorkflowSectionIds.YourOrganisation.ExperienceAndAccreditations)">@Model.SectionStatus(RoatpWorkflowSequenceIds.YourOrganisation, RoatpWorkflowSectionIds.YourOrganisation.ExperienceAndAccreditations)</strong>
                    </a>
                }
                else
                {
                    @Html.Raw("Experience and accreditation")
                }
            </li>

        </ul>
    </li>
    }
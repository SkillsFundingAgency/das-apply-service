@using SFA.DAS.ApplyService.Application.Apply.Roatp
@model SFA.DAS.ApplyService.Web.ViewModels.Roatp.TaskListViewModel

@{
    ViewBag.Title = "Task list";
    Layout = "_Layout";
}

<div class="govuk-width-container">

    <main class="govuk-main-wrapper " id="main-content" role="main">

        <div class="govuk-grid-row">
            <div class="govuk-grid-column-two-thirds">
                <h1 class="govuk-heading-l">Application overview</h1>
                <p class="govuk-body">
                    UKPRN: @Model.UKPRN <br/>
                    Organisation name: @Model.OrganisationName
                </p>
                <ol class="app-task-list">

                    @{
                        var yourOrganisationSequence = Model.ApplicationSequences
                            .Single(seq => (int) seq.SequenceId == RoatpWorkflowSequenceIds.YourOrganisation);

                        var sequentialSections = yourOrganisationSequence.Sections
                            .Where(section => section.SectionId != RoatpWorkflowSectionIds.YourOrganisationProviderRoute
                                           && section.SectionId != RoatpWorkflowSectionIds.YourOrganisationWhatYouWillNeed);

                        var whatYouNeedStatus = Model.SectionStatus(RoatpWorkflowSectionIds.YourOrganisationProviderRoute, RoatpWorkflowSectionIds.YourOrganisationWhatYouWillNeed);
                        var whatYouNeedCss = "";
                        if (whatYouNeedStatus != "Completed")
                        {
                            whatYouNeedCss = "next";
                        }
                        else
                        {
                            whatYouNeedCss = whatYouNeedStatus;
                        }

                        <li>
                            <h2 class="app-task-list__section">
                                @Html.Raw(Convert.ToInt32(yourOrganisationSequence.SequenceId)). @Html.Raw(yourOrganisationSequence.Description)
                            </h2>

                            <ul class="app-task-list__items">
                                <li class="app-task-list__item">
                                    <a class="app-task-list__task-name" href="@Url.Action("ProviderRoute", "RoatpYourOrganisationApplication", new {applicationId = Model.ApplicationId})">Provider route</a>
                                    <strong class="govuk-tag app-task-list__task-completed" id="completed">Completed</strong>                               
                                </li>
                                <li class="app-task-list__item">
                                    <a class="app-task-list__task_name" href="@Url.Action("WhatYouWillNeed", "RoatpYourOrganisationApplication", new {applicationId = Model.ApplicationId})">Introduction and what you'll need</a>
                                    <strong class="govuk-tag app-task-list__task-@whatYouNeedCss" id="completed">@whatYouNeedCss</strong>
                                </li>

                                @foreach (var section in sequentialSections)
                                {
                                    <li class="app-task-list__item">
                                        <a class="app-task-list__task-name" href="@Url.Action("Section", "RoatpApplication", new {section.ApplicationId, section.SequenceId, section.SectionId})">
                                            @Html.Raw(section.Title)
                                            <strong class="govuk-tag app-task-list__task-@Model.CssClass(section.SequenceId, section.SectionId)" id="completed">@Model.SectionStatus(section.SequenceId, section.SectionId)</strong>
                                        </a>
                                    </li>
                                }
                            </ul>
                        </li>
                        @foreach (var applicationSequence in Model.ApplicationSequences.Where(sequence => (int)sequence.SequenceId != RoatpWorkflowSequenceIds.YourOrganisation).OrderBy(seq => seq.SequenceId))
                         {
                             <li>
                                 <h2 class="app-task-list__section">
                                     @Html.Raw(Convert.ToInt32(applicationSequence.SequenceId)). @Html.Raw(applicationSequence.Description)
                                 </h2>
                                 <ul class="app-task-list__items">
                                     @foreach (var section in applicationSequence.Sections.OrderBy(sec => sec.SectionId))
                                     {
                                         <li class="app-task-list__item">
                                             <a class="app-task-list__task-name" href="@Url.Action("Section", "RoatpApplication", new {section.ApplicationId, section.SequenceId, section.SectionId})">
                                                 @Html.Raw(section.Title)
                                             </a>
                                             <strong class="govuk-tag app-task-list__task-@Model.CssClass(section.SequenceId, section.SectionId)" id="completed">@Model.SectionStatus(section.SequenceId, section.SectionId)</strong>
                                         </li>
                                     }
                                 </ul>
                             </li>
                         }
                    }

                </ol>
            </div>
        </div>
    </main>
</div>
@model SFA.DAS.ApplyService.Web.Controllers.PageViewModel

@{
    ViewBag.Title = @Model.Title;
}

<a href="@Url.Action("Section", "Application", new {Model.ApplicationId, Model.SequenceId, Model.SectionId})" class="govuk-back-link">Back to summary</a>
<main class="govuk-main-wrapper " id="main-content" role="main">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            @if (!string.IsNullOrEmpty(@Model.Title) && Model.Questions.Count() > 1)
            {
                <h1 class="govuk-heading-xl">
                    @if (Model?.DisplayType=="PagesWithSections")
                    {@Model.LinkTitle}
                    else
                    {@Model.Title}
                </h1>
            }


            @if (Model.HasFeedback)
            {
                <div class="govuk-inset-text">
                    @foreach (var fb in Model.Feedback)
                    {
                        <p class="govuk-body">@fb.Message</p>
                    }
                </div>
            }



            @if (!ViewData.ModelState.IsValid)
            {

                <div class="govuk-error-summary" aria-labelledby="error-summary-title" role="alert" tabindex="-1" data-module="error-summary">
                    <h2 class="govuk-error-summary__title" id="error-summary-title">
                        There is a problem
                    </h2>
                    <div class="govuk-error-summary__body">
                        <ul class="govuk-list govuk-error-summary__list">
                            @foreach (var error in Model.ErrorMessages)
                            {
                                <li>
                                    <a href="#@error.Field">@error.ErrorMessage</a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            }
            
            <form method="post" asp-action="SaveAnswers" asp-controller="Application" novalidate enctype="multipart/form-data">
                @if (Model.Questions.Count() == 1)
                {
                    foreach (var question in Model.Questions)
                    {
                        <div class="govuk-form-group @(!ViewData.ModelState.IsValid ? "govuk-form-group--error" : "")">
                            <fieldset class="govuk-fieldset">
                                @if (question.Type == "Checkbox" || question.Type == "Radio" || question.Type == "ComplexRadio")
                                {
                                    <legend class="govuk-fieldset__legend govuk-fieldset__legend--xl">
                                        <h1 class="govuk-fieldset__heading">
                                            @Html.Raw(question.Label)
                                        </h1>
                                    </legend>
                                }
                                else
                                {
                                    <h2 class="govuk-label-wrapper">
                                        <label class="govuk-label govuk-label--xl" for="@question.QuestionId">
                                            @Html.Raw(question.Label)
                                        </label>
                                    </h2>
                                }
                                <span class="govuk-hint">
                                    @Html.Raw(question.Hint)
                                </span>
                                
                                @if (Model.ErrorMessages != null)
                                {
                                    foreach (var error in Model.ErrorMessages)
                                    {
                                        if (error.Field == question.QuestionId)
                                        {
                                            <span id="@error.Field-error" class="govuk-error-message">
                                                @Html.Raw(error.ErrorMessage)
                                            </span>
                                        }
                                    }
                                }
                                @Html.Partial($"~/Views/Application/Pages/Controls/_{question.Type}.cshtml", question)
                            </fieldset>
                        </div>
                    }
                }
                else
                {
                    foreach (var question in Model.Questions)
                    {
                        var questionHasError = false;
                        if (Model.ErrorMessages != null)
                        {
                            foreach (var error in Model.ErrorMessages)
                            {
                                if (error.Field == question.QuestionId)
                                {
                                    questionHasError = true;
                                }
                            }
                        }
                        <div class="govuk-form-group govuk-!-margin-bottom-8 @(questionHasError ? "govuk-form-group--error" : "")">
                            <label class="govuk-label govuk-label--m" for="@question.QuestionId">
                                @Html.Raw(question.Label)
                            </label>
                            @if (question.Hint != "")
                            {
                                <span class="govuk-hint">
                                    @Html.Raw(question.Hint)
                                </span>
                            }

                            @if (Model.ErrorMessages != null)
                            {
                                foreach (var error in Model.ErrorMessages)
                                {
                                    if (error.Field == question.QuestionId)
                                    {
                                        <span id="@error.Field-error" class="govuk-error-message">
                                            @Html.Raw(error.ErrorMessage)
                                        </span>
                                    }
                                }
                            }
                            @Html.Partial($"~/Views/Application/Pages/Controls/_{question.Type}.cshtml", question)
                        </div>
                    }
                }
                <button type="submit" class="govuk-button">Add</button>
            </form>

            @if (Model.PageOfAnswers.Any())
            {
                <table class="govuk-table">
                    <thead class="govuk-table__head">
                    <tr class="govuk-table__row">
                        @foreach (var answer in Model.PageOfAnswers.First().Answers)
                        {
                            <th class="govuk-table__header" scope="col">@Model.Questions.Single(q => q.QuestionId == answer.QuestionId).Label</th>
                        }
                        <th class="govuk-table__header"></th>
                    </tr>
                    </thead>
                    <tbody class="govuk-table__body">
                    
                    @foreach (var answerPage in Model.PageOfAnswers)
                    {
                        <tr class="govuk-table__row">
                            @foreach (var answer in answerPage.Answers)
                            {
                                <td class="govuk-table__cell">@Model.Questions.Single(q => q.QuestionId == answer.QuestionId).DisplayAnswerValue(answer)</td>
                            }
                            <td class="govuk-table__cell">
                                <form asp-action="DeleteAnswer" asp-controller="Application">
                                    <input type="hidden" id="AnswerId" name="AnswerId" value="@answerPage.Id"/>
                                    <input type="hidden" id="ApplicationId" name="ApplicationId" value="@Model.ApplicationId"/>
                                    <input type="hidden" id="SectionId" name="SectionId" value="@Model.SectionId"/>
                                    <input type="hidden" id="SequenceId" name="SequenceId" value="@Model.SequenceId"/>
                                    <input type="hidden" id="PageId" name="PageId" value="@Model.PageId"/>
                                    <input type="hidden" id="RedirectAction" name="RedirectAction" value="@Model.RedirectAction"/>
                                    <button class="govuk-button govuk-button--looks-like-link" type="submit">Delete</button>
                                </form>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            }


            <form method="post" asp-action="NextPage" asp-controller="Application" novalidate enctype="multipart/form-data">
                <button type="submit" class="govuk-button">Save and continue</button>
            </form>

            <p class="govuk-body">
                <a class="govuk-link" href="@Url.Action("Section", "Application", new {Model.ApplicationId, Model.SequenceId, Model.SectionId})">Return to summary</a>
            </p>
        </div>
    </div>
</main>
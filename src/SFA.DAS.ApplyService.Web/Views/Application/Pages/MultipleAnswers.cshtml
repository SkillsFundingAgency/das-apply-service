@model SFA.DAS.ApplyService.Web.ViewModels.PageViewModel
@using SFA.DAS.ApplyService.Domain.Entities
@{
    ViewBag.Title = (!ViewData.ModelState.IsValid ? "Error: " : "") + (@Model.Title ?? "Page not active");
}

@*
<noscript>
    @if (!string.IsNullOrWhiteSpace(Model.ReturnUrl))
    {
        <a class="govuk-back-link" href="@Model.ReturnUrl">Back to previous page</a>
    }
    else if (Model.RedirectAction == "Feedback")
    {
        <a class="govuk-back-link" asp-action="Feedback" asp-controller="Application" asp-route-applicationId="@Model.ApplicationId">Back to summary</a>
    }
    else
    {
        <a class="govuk-back-link" asp-action="Section" asp-controller="Application" asp-route-applicationId="@Model.ApplicationId" asp-route-sequenceId="@Model.SequenceId" asp-route-sectionId="@Model.SectionId">Back to summary</a>
    }
</noscript>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var jsBackButton = document.getElementById("jsBackButton");
        jsBackButton.style = "";
    });
</script>
<a id="jsBackButton" href="javascript:history.back()" class="govuk-back-link" style="display:none">Back to previous page</a>
*@

<main class="govuk-main-wrapper " id="main-content" role="main">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">

            @if (!ViewData.ModelState.IsValid)
            {

                <div class="govuk-error-summary" aria-labelledby="error-summary-title" role="alert" tabindex="-1" data-module="govuk-error-summary">
                    <h2 class="govuk-error-summary__title" id="error-summary-title">
                        There is a problem
                    </h2>
                    <div class="govuk-error-summary__body">
                        <ul class="govuk-list govuk-error-summary__list">
                            @foreach (var error in Model.ErrorMessages)
                            {
                                <li>
                                    <a href="#@error.Field">@error.ErrorMessage</a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            }

            @if (!string.IsNullOrEmpty(@Model.Title) && Model.Questions.Count() > 1)
            {
                if (Model.PageContext != null)
                {
                    <span class="govuk-caption-xl">
                        @Html.Raw(Model.PageContext)
                    </span>
                }

                <h1 class="govuk-heading-xl">
                    @if (Model?.DisplayType == PageDisplayType.PagesWithSections)
                    {
                        @Model.LinkTitle
                    }
                    else
                    {
                        @Model.Title
                    }
                </h1>
            }

            @if (Model.HasFeedback)
            {
                <div class="govuk-inset-text">
                    <h2 class="govuk-heading-l">Feedback</h2>
                    @foreach (var fb in Model.Feedback)
                    {
                        <p class="govuk-body">@Html.Raw(fb.Message)</p>
                    }
                </div>
            }
        </div>
    </div>

    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">

            @if (Model.PageOfAnswers.Any())
            {
                @foreach (var answerPage in Model.PageOfAnswers.Where(poa => poa.Answers.Any()))
                {
                    <dl class="govuk-summary-list">
                        @foreach (var answer in answerPage.Answers)
                        {
                            <div class="govuk-summary-list__row">
                                <dt class="govuk-summary-list__key">
                                    @Model.Questions.Single(q => q.QuestionId == answer.QuestionId).Label
                                </dt>
                                <dd class="govuk-summary-list__value">
                                    @Model.Questions.Single(q => q.QuestionId == answer.QuestionId).DisplayAnswerValue(answer)
                                </dd>
                            </div>
                        }

                        <form asp-action="DeleteAnswer" asp-controller="Application" novalidate>
                            <input type="hidden" id="AnswerId" name="AnswerId" value="@answerPage.Id" />
                            <input type="hidden" asp-for="ApplicationId" />
                            <input type="hidden" asp-for="SectionId" />
                            <input type="hidden" asp-for="SequenceId" />
                            <input type="hidden" asp-for="PageId" />
                            <input type="hidden" asp-for="RedirectAction" />
                            <div class="govuk-!-margin-top-4">
                                <button class="govuk-button govuk-button--looks-like-link" type="submit">Delete</button>
                            </div>
                        </form>
                    </dl>
                }
            }

        </div>
    </div>
    
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            @* no action is specified for the form, post back to the get url to preserve the page hierarchy parameters *@
            <form method="post" enctype="multipart/form-data" novalidate>
                <input type="hidden" asp-for="RedirectAction" />

                @if (Model.Questions.Count() == 1)
                {
                    foreach (var question in Model.Questions)
                    {
                        <div class="govuk-form-group @(!ViewData.ModelState.IsValid ? "govuk-form-group--error" : "")">
                            <fieldset class="govuk-fieldset">
                                @if (QuestionType.Checkbox.Equals(question.Type, StringComparison.InvariantCultureIgnoreCase)
                                    || QuestionType.Radio.Equals(question.Type, StringComparison.InvariantCultureIgnoreCase)
                                    || QuestionType.ComplexRadio.Equals(question.Type, StringComparison.InvariantCultureIgnoreCase)
                                    || QuestionType.CheckboxList.Equals(question.Type, StringComparison.InvariantCultureIgnoreCase)
                                    || QuestionType.ComplexCheckboxList.Equals(question.Type, StringComparison.InvariantCultureIgnoreCase))
                                {
                                <legend class="govuk-fieldset__legend govuk-fieldset__legend--xl">
                                    @if (Model.PageContext != null)
                                    {
                                        <span class="govuk-caption-xl">
                                            @Html.Raw(Model.PageContext)
                                        </span>
                                    }
                                    <h1 class="govuk-fieldset__heading">
                                        @Html.Raw(question.Label)
                                    </h1>
                                </legend>
                                }
                                else
                                {
                                @if (Model.PageContext != null)
                                {
                                    <span class="govuk-caption-xl">
                                        @Html.Raw(Model.PageContext)
                                    </span>
                                }
                                <h2 class="govuk-label-wrapper">
                                    <label class="govuk-label govuk-label--xl" for="@question.QuestionId">
                                        @Html.Raw(question.Label)
                                    </label>
                                </h2>
                                }
                                <span class="govuk-hint">
                                    @Html.Raw(question.Hint)
                                </span>

                                <partial name="@($"~/Views/QuestionPartials/_{question.Type}.cshtml")" for="@question" />
                            </fieldset>
                        </div>
                    }
                }
                else
                {
                    foreach (var question in Model.Questions)
                    {
                        var questionHasError = false;
                        if (Model.ErrorMessages != null)
                        {
                            foreach (var error in Model.ErrorMessages)
                            {
                                if (error.Field == question.QuestionId)
                                {
                                    questionHasError = true;
                                }
                            }
                        }
                        <div class="govuk-form-group govuk-!-margin-bottom-8 @(questionHasError ? "govuk-form-group--error" : "")">
                            <label class="govuk-label govuk-label--m" for="@question.QuestionId">
                                @Html.Raw(question.Label)
                            </label>
                            @if (question.Hint != "")
                            {
                                <span class="govuk-hint">
                                    @Html.Raw(question.Hint)
                                </span>
                            }

                            <partial name="@($"~/Views/QuestionPartials/_{question.Type}.cshtml")" for="@question" />
                        </div>
                    }
                }

                <div class="govuk-form-group">
                    <button type="submit" class="govuk-button govuk-button--looks-like-link" name="__formAction" value="Add">Save and add another</button>
                </div>

                <partial name="~/Views/Application/Pages/DetailsComponent.cshtml" for="Details" />

                <button type="submit" class="govuk-button" name="__formAction" value="Save">Save and continue</button>
            </form>

            <p class="govuk-body">
                @if (Model.RedirectAction == "Feedback")
                {
                    <a class="govuk-link" asp-action="Feedback" asp-controller="Application" asp-route-applicationId="@Model.ApplicationId">Return to summary</a>
                }
                else
                {
                    <a class="govuk-link" asp-action="Section" asp-controller="Application" asp-route-applicationId="@Model.ApplicationId" asp-route-sequenceId="@Model.SequenceId" asp-route-sectionId="@Model.SectionId">Return to summary</a>
                }
            </p>
        </div>
    </div>
</main>
@model SFA.DAS.ApplyService.Web.Controllers.QuestionViewModel

@if (Model.ErrorMessages != null && Model.ErrorMessages.Count > 0)
{
    foreach (var errorMessage in Model.ErrorMessages)
    {
        if (errorMessage.Field == Model.QuestionId)
        {
            <span class="govuk-error-message">@errorMessage.ErrorMessage</span>
        }
    }
}

<input
    type="file"
    class="govuk-file-upload"
    id="@Model.QuestionId"
    name="@Model.QuestionId"
    accept=".pdf,application/pdf"
/>

@{ var existingFiles = Model.FileUploadInfo.Uploads.Count() > 0 ? "" : "govuk-visually-hidden"; }

<table class="js-file-upload-table govuk-table @existingFiles">
    <thead class="govuk-table__head">
        <tr class="govuk-table__row">
            <th class="govuk-table__header" scope="col">File name</th>
            <th class="govuk-table__header" scope="col">
                <span class="govuk-visually-hidden-focusable">Action</span>
            </th>
        </tr>
    </thead>
    <tbody class="govuk-table__body js-uploaded-files">
    
    @foreach (var uploadedFile in Model.FileUploadInfo.Uploads)
    {
        <tr class="govuk-table__row">
            <td class="govuk-table__cell govuk-table__cell--break-word" scope="row">
                <a class="govuk-link" href="@Url.Action("Download", "Application", new
                {
                    applicationId = Model.ApplicationId,
                    sequenceId = Model.SequenceId,
                    sectionId = Model.SectionId,
                    pageId = Model.PageId,
                    questionId = Model.QuestionId,
                    filename = @uploadedFile.Filename
                })" download>
                    @uploadedFile.Filename
                </a>
            </td>
            <td class="govuk-table__cell govuk-table__cell--numeric">
                <a class="govuk-link" href="@Url.Action("DeleteFile", "Application", new
                {
                    applicationId = Model.ApplicationId,
                    sequenceId = Model.SequenceId,
                    sectionId = Model.SectionId,
                    pageId = Model.PageId,
                    questionId = Model.QuestionId,
                    redirectAction = Model.RedirectAction,
                    fileName = uploadedFile.Filename
                })">
                    Remove <span class="govuk-visually-hidden"> file</span>
                </a>
            </td>
        </tr>
    }
    </tbody>
</table>

<div class="das-file-upload">
    <div href="#" class="js-drop-target">
        <div class="js-drop-text">
            <p class="govuk-body-l govuk-!-margin-bottom-0">Drag files here</p>
        </div>
        <div class="js-upload-progress"></div>
    </div>
    <p class="govuk-body govuk-!-margin-bottom-0 govuk-!-margin-top-2">or <a class="js-browse-link govuk-link" id="choose-file" href="#/choose-files-to-upload">choose files to upload</a></p>
</div>


<script src="@Url.Content("~/javascripts/resumable.js")"></script>
<script src="@Url.Content("~/javascripts/das-file-uploads.js")"></script>
<script type="text/javascript">
  GOVUK.fileUpload.init({
        target: "/Upload/Chunks",
        testChunks: false,
        chunkSize: 1000000,
        simultaneousUploads : 1,
        query: {
            applicationId: "@Model.ApplicationId",
            sequenceId: @Model.SequenceId,
            sectionId: @Model.SectionId,
            page: @Model.PageId,
            questionId: "@Model.QuestionId"
        },
        maxFiles: @( Model.FileUploadInfo.MaximumNumberOfUploads == null ? "1" : Model.FileUploadInfo.MaximumNumberOfUploads.ToString()),
        maxFileSize: 1e7, // 10mb
        fileType: [
            "application/pdf"
        ],
        maxTotalFiles: @( Model.FileUploadInfo.MaximumNumberOfUploads == null ? "1" : Model.FileUploadInfo.MaximumNumberOfUploads.ToString()),
        existingFiles: @Json.Serialize(Model.FileUploadInfo.Uploads)
    })
</script>
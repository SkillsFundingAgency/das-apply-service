@using SFA.DAS.QnA.Api.Views
@model dynamic
@{
    var isError = Model.ErrorMessages != null && Model.ErrorMessages.Count > 0 ? "govuk-input--error" : "";
}
@{
    var checkedStatus = "checked";
    var options = ViewHelpers.GetOptions(Model);
}

@if (Model.ErrorMessages != null && Model.ErrorMessages.Count > 0)
{
    foreach (var errorMessage in Model.ErrorMessages)
    {
        if (errorMessage.Field == Model.QuestionId)
        {
            <span class="govuk-error-message">@Html.Raw(errorMessage.ErrorMessage)</span>
            checkedStatus = string.Empty;
        }
    }
}

<div class="govuk-checkboxes govuk-!-margin-bottom-5 js-check-all-container">
    <div class="govuk-checkboxes__item">
        <input class="govuk-checkboxes__input js-check-all-control" type="checkbox" id="allAreas" name="allAreas" value="" />
        <label class="govuk-label govuk-checkboxes__label" for="allAreas">
            All areas
        </label>
    </div>
</div>


<div class="govuk-checkboxes js-checkbox-container">
    @for (int i = 0; i < options.Count; i++)
    {
        var checkboxChecked = (Model.Value != null && Model.Value.Contains(options[i].Value)) ? checkedStatus : "";
        var optionId = Model.QuestionId + (i == 0 ? "" : "_" + i);
        <div class="govuk-checkboxes__item" id="@Model.QuestionId">
            @if (options[i].HasHintText)
            {
                <input class="govuk-checkboxes__input js-check-all-checkbox" type="checkbox" id="option_@i" name="@Model.QuestionId" value="@options[i].Value" @checkboxChecked aria-describedby="@optionId-hint" />
            }
            else
            {
                <input class="govuk-checkboxes__input js-check-all-checkbox" type="checkbox" id="option_@i" name="@Model.QuestionId" value="@options[i].Value" @checkboxChecked />
            }
            <label class="govuk-label govuk-checkboxes__label" for="option_@i">
                @options[i].Label
            </label>
            @if (options[i].HasHintText)
            {
                <span id="@optionId-hint" class="govuk-hint govuk-radios__hint">
                    @Html.Raw(options[i].HintText)
                </span>
            }
        </div>
        if (Model.Options[i].FurtherQuestions != null)
        {
            <div class="govuk-radios__conditional govuk-radios__conditional--hidden" id="conditional-@optionId">
                @for (int furtherQuestionIndex = 0; furtherQuestionIndex < Model.Options[i].FurtherQuestions.Count; furtherQuestionIndex++)
                {
                    {
                        if (Model.ErrorMessages != null)
                        {
                            foreach (var errorMessage in Model.ErrorMessages)
                            {
                                foreach (var furtherQuestion in Model.Options[i].FurtherQuestions)
                                {
                                    if (errorMessage.Field == furtherQuestion.QuestionId)
                                    {
                                        furtherQuestion.ErrorMessages = Model.ErrorMessages;
                                    }
                                }
                            }
                        }
                    }
                    <div class="govuk-form-group">
                        <label class="govuk-label" for="@Model.Options[i].FurtherQuestions[furtherQuestionIndex].QuestionId">@Model.Options[i].FurtherQuestions[furtherQuestionIndex].Label</label>
                        @if (Model.Options[i].FurtherQuestions[furtherQuestionIndex].Hint != null)
                        {
                            <span id="@Model.Options[i].FurtherQuestions[furtherQuestionIndex].QuestionId-hint" class="govuk-hint govuk-radios__hint">
                                @Html.Raw(Model.Options[i].FurtherQuestions[furtherQuestionIndex].Hint)
                            </span>
                        }
                        @HtmlHelperPartialExtensions.Partial(Html, $"~/Views/QuestionPartials/_{Model.Options[i].FurtherQuestions[furtherQuestionIndex].Input.Type}.cshtml", Model.Options[i].FurtherQuestions[furtherQuestionIndex])
                    </div>
                }
            </div>
        }
    }
</div>

<script type="text/javascript">
    if (document.querySelector('.js-check-all-container')) {
        document.addEventListener("DOMContentLoaded", function() {
            GOVUK.checkAll.init()
        });
    }
</script>